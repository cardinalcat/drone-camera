=== Environment configuration:
===   OPENCV_HEADER_DIR = None
===   OPENCV_PACKAGE_NAME = None
===   OPENCV_PKGCONFIG_NAME = None
===   OPENCV_CMAKE_NAME = None
===   OPENCV_CMAKE_BIN = None
===   OPENCV_VCPKG_NAME = None
===   OPENCV_LINK_LIBS = None
===   OPENCV_LINK_PATHS = None
===   OPENCV_INCLUDE_PATHS = None
===   OPENCV_DISABLE_PROBES = None
===   OPENCV_CLANG_STDLIB_PATH = None
===   CMAKE_PREFIX_PATH = None
===   OpenCV_DIR = None
===   PKG_CONFIG_PATH = None
===   VCPKG_ROOT = None
=== Probing OpenCV library using pkg_config
=== OpenCV library configuration: Library {
    include_paths: [
        "/usr/include/opencv4/opencv",
        "/usr/include/opencv4",
    ],
    version: "4.2.0",
    cargo_metadata: [
        "cargo:rustc-link-search=native=/usr/lib/x86_64-linux-gnu",
        "cargo:rustc-link-lib=opencv_stitching",
        "cargo:rustc-link-lib=opencv_aruco",
        "cargo:rustc-link-lib=opencv_bgsegm",
        "cargo:rustc-link-lib=opencv_bioinspired",
        "cargo:rustc-link-lib=opencv_ccalib",
        "cargo:rustc-link-lib=opencv_dnn_objdetect",
        "cargo:rustc-link-lib=opencv_dnn_superres",
        "cargo:rustc-link-lib=opencv_dpm",
        "cargo:rustc-link-lib=opencv_highgui",
        "cargo:rustc-link-lib=opencv_face",
        "cargo:rustc-link-lib=opencv_freetype",
        "cargo:rustc-link-lib=opencv_fuzzy",
        "cargo:rustc-link-lib=opencv_hdf",
        "cargo:rustc-link-lib=opencv_hfs",
        "cargo:rustc-link-lib=opencv_img_hash",
        "cargo:rustc-link-lib=opencv_line_descriptor",
        "cargo:rustc-link-lib=opencv_quality",
        "cargo:rustc-link-lib=opencv_reg",
        "cargo:rustc-link-lib=opencv_rgbd",
        "cargo:rustc-link-lib=opencv_saliency",
        "cargo:rustc-link-lib=opencv_shape",
        "cargo:rustc-link-lib=opencv_stereo",
        "cargo:rustc-link-lib=opencv_structured_light",
        "cargo:rustc-link-lib=opencv_phase_unwrapping",
        "cargo:rustc-link-lib=opencv_superres",
        "cargo:rustc-link-lib=opencv_optflow",
        "cargo:rustc-link-lib=opencv_surface_matching",
        "cargo:rustc-link-lib=opencv_tracking",
        "cargo:rustc-link-lib=opencv_datasets",
        "cargo:rustc-link-lib=opencv_text",
        "cargo:rustc-link-lib=opencv_dnn",
        "cargo:rustc-link-lib=opencv_plot",
        "cargo:rustc-link-lib=opencv_ml",
        "cargo:rustc-link-lib=opencv_videostab",
        "cargo:rustc-link-lib=opencv_videoio",
        "cargo:rustc-link-lib=opencv_viz",
        "cargo:rustc-link-lib=opencv_ximgproc",
        "cargo:rustc-link-lib=opencv_video",
        "cargo:rustc-link-lib=opencv_xobjdetect",
        "cargo:rustc-link-lib=opencv_objdetect",
        "cargo:rustc-link-lib=opencv_calib3d",
        "cargo:rustc-link-lib=opencv_imgcodecs",
        "cargo:rustc-link-lib=opencv_features2d",
        "cargo:rustc-link-lib=opencv_flann",
        "cargo:rustc-link-lib=opencv_xphoto",
        "cargo:rustc-link-lib=opencv_photo",
        "cargo:rustc-link-lib=opencv_imgproc",
        "cargo:rustc-link-lib=opencv_core",
    ],
}
=== Found OpenCV library version: 4.2.0 in headers located at: /usr/include/opencv4
=== Using OpenCV headers from: /usr/include/opencv4/opencv2
=== Generating code in: /home/cardinal/drone-camera/server/target/debug/build/opencv-b44597f1e3e90d5b/out
=== Placing generated bindings into: /home/cardinal/.cargo/registry/src/github.com-1ecc6299db9ec823/opencv-0.37.0/bindings/rust/opencv_4
=== Clang command line args: [
    "-isystem/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9",
    "-isystem/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9",
    "-isystem/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward",
    "-isystem/usr/local/include",
    "-isystem/usr/lib/llvm-10/lib/clang/10.0.0/include",
    "-isystem/usr/include/x86_64-linux-gnu",
    "-isystem/usr/include",
    "-I/usr/include/opencv4",
    "-I/home/cardinal/.cargo/registry/src/github.com-1ecc6299db9ec823/opencv-0.37.0/src_cpp",
    "-DOCVRS_PARSING_HEADERS",
    "-includeocvrs_resolve_types.hpp",
]
